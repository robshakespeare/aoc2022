@page "/{DayNumber?}"
@inject ISolverFactory SolverFactory

<PageTitle>Shakey's AoC 2022</PageTitle>

@if (_solver == null)
{
    <div class="warning">
        No solver for day '<strong>@DayNumber</strong>'.
    </div>
}
else
{
    if (DayNumber == "25")
    {
        <XmasTree />
    }

    <div>
        <h2>
            <NavLink href="list">@(_solver.GetTitle())</NavLink>
        </h2>

        <ResultDisplay PartNum="1" Result="_results.Part1Result" />

        <ResultDisplay PartNum="2" Result="_results.Part2Result" />

        <VisualizerDisplay Visualizer="_visualizer" />
    </div>
}

@code {
    [Parameter]
    public string? DayNumber { get; set; }

    private ISolverBase? _solver;
    private IVisualize? _visualizer;
    private Results _results;

    protected override async Task OnParametersSetAsync()
    {
        if (string.IsNullOrWhiteSpace(DayNumber))
        {
            DayNumber = SolverFactory.DefaultDay;
        }

        _solver = SolverFactory.TryCreateSolver(DayNumber);
        _visualizer = default;
        _results = default;

        if (_solver != null)
        {
            await _solver.RunAsync(async results =>
            {
                _results = results;
                await InvokeAsync(StateHasChanged);
                await Task.Delay(25); // give the UI some time to catch up
            });

            _visualizer = _solver as IVisualize;
        }
    }
}
